/**
 * -----------------------------------------------------------------------------
 * File: components/typo/mixins
 * -----------------------------------------------------------------------------
 *
 */
 
/**
 * Font smoothing
 * -----------------------------------------------------------------------------
 *
 */

@mixin font-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; 	
}

/**
 * Font: Volte Regular
 * -----------------------------------------------------------------------------
 * 
 */

 @mixin font-regular() {
  font-family: 'volteregular', sans-serif;
  font-weight: normal;
  font-style: normal;
  font-display: auto;
  font-stretch: normal;
}

/**
 * Font: Volte Medium
 * -----------------------------------------------------------------------------
 * 
 */

@mixin font-medium() {
  font-family: 'voltemedium', sans-serif;
  font-weight: normal;
  font-style: normal;
  font-display: auto;
  font-stretch: normal;
}



/**
 * Font: Routine Book
 * -----------------------------------------------------------------------------
 * 
 */

 @mixin font-book() {
  font-family: 'Routine-Book', sans-serif;
  font-weight: normal;
  font-style: normal;
  font-display: auto;
  font-stretch: normal;
}


%word-break,
.word-break {
	-ms-word-break: break-all;
	word-break: break-all;
	word-break: break-word;
	-webkit-hyphens: auto;
	-moz-hyphens: auto;
	hyphens: auto;
}

/**
 * Define the font size
 * -----------------------------------------------------------------------------
 * 
 *
 */
 
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }


      // @media screen and (min-width: $fs-breakpoint) {
      //   @include make-font-size($fs-font-size);
      // }
      
      @if $fs-breakpoint == 1200px {
        @media screen and (min-width: $fs-breakpoint) and (min-height: $bp-sm) {
          @include make-font-size($fs-font-size);
        }
      }
      @else {
        @media screen and (min-width: $fs-breakpoint) {
          @include make-font-size($fs-font-size);
        }
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  }
  @else {
    font-size: $fs-font-size;
  }
}